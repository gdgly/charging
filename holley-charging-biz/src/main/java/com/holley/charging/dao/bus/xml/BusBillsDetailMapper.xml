<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holley.charging.dao.bus.BusBillsDetailMapper" >
  <resultMap id="BaseResultMap" type="com.holley.charging.model.bus.BusBillsDetail" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="CHECK_CYCLE" property="checkCycle" jdbcType="VARCHAR" />
    <result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
    <result column="APP_FEE_IN" property="appFeeIn" jdbcType="DECIMAL" />
    <result column="CHA_FEE_IN" property="chaFeeIn" jdbcType="DECIMAL" />
    <result column="SERVICE_FEE_IN" property="serviceFeeIn" jdbcType="DECIMAL" />
    <result column="PARK_FEE_IN" property="parkFeeIn" jdbcType="DECIMAL" />
    <result column="CHECK_MARK" property="checkMark" jdbcType="SMALLINT" />
    <result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="BillsDetailResultMap" type="com.holley.charging.model.bms.BillsDetailIn" extends="BaseResultMap">
  	<result column="PILE_ID" property="pileId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, RECORD_ID, USER_ID, CHECK_CYCLE, TOTAL_FEE, APP_FEE_IN, CHA_FEE_IN, SERVICE_FEE_IN, 
    PARK_FEE_IN, CHECK_MARK, ADD_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.holley.charging.model.bus.BusBillsDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bus_bills_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bus_bills_detail
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bus_bills_detail
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.holley.charging.model.bus.BusBillsDetailExample" >
    delete from bus_bills_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holley.charging.model.bus.BusBillsDetail" >
    insert into bus_bills_detail (ID, RECORD_ID, USER_ID, 
      CHECK_CYCLE, TOTAL_FEE, APP_FEE_IN, 
      CHA_FEE_IN, SERVICE_FEE_IN, PARK_FEE_IN, 
      CHECK_MARK, ADD_TIME)
    values (#{id,jdbcType=INTEGER}, #{recordId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{checkCycle,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, #{appFeeIn,jdbcType=DECIMAL}, 
      #{chaFeeIn,jdbcType=DECIMAL}, #{serviceFeeIn,jdbcType=DECIMAL}, #{parkFeeIn,jdbcType=DECIMAL}, 
      #{checkMark,jdbcType=SMALLINT}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.holley.charging.model.bus.BusBillsDetail" >
    insert into bus_bills_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="checkCycle != null" >
        CHECK_CYCLE,
      </if>
      <if test="totalFee != null" >
        TOTAL_FEE,
      </if>
      <if test="appFeeIn != null" >
        APP_FEE_IN,
      </if>
      <if test="chaFeeIn != null" >
        CHA_FEE_IN,
      </if>
      <if test="serviceFeeIn != null" >
        SERVICE_FEE_IN,
      </if>
      <if test="parkFeeIn != null" >
        PARK_FEE_IN,
      </if>
      <if test="checkMark != null" >
        CHECK_MARK,
      </if>
      <if test="addTime != null" >
        ADD_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="checkCycle != null" >
        #{checkCycle,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="appFeeIn != null" >
        #{appFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="chaFeeIn != null" >
        #{chaFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeeIn != null" >
        #{serviceFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="parkFeeIn != null" >
        #{parkFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="checkMark != null" >
        #{checkMark,jdbcType=SMALLINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holley.charging.model.bus.BusBillsDetailExample" resultType="java.lang.Integer" >
    select count(*) from bus_bills_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bus_bills_detail
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recordId != null" >
        RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.checkCycle != null" >
        CHECK_CYCLE = #{record.checkCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null" >
        TOTAL_FEE = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.appFeeIn != null" >
        APP_FEE_IN = #{record.appFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="record.chaFeeIn != null" >
        CHA_FEE_IN = #{record.chaFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceFeeIn != null" >
        SERVICE_FEE_IN = #{record.serviceFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="record.parkFeeIn != null" >
        PARK_FEE_IN = #{record.parkFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="record.checkMark != null" >
        CHECK_MARK = #{record.checkMark,jdbcType=SMALLINT},
      </if>
      <if test="record.addTime != null" >
        ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bus_bills_detail
    set ID = #{record.id,jdbcType=INTEGER},
      RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CHECK_CYCLE = #{record.checkCycle,jdbcType=VARCHAR},
      TOTAL_FEE = #{record.totalFee,jdbcType=DECIMAL},
      APP_FEE_IN = #{record.appFeeIn,jdbcType=DECIMAL},
      CHA_FEE_IN = #{record.chaFeeIn,jdbcType=DECIMAL},
      SERVICE_FEE_IN = #{record.serviceFeeIn,jdbcType=DECIMAL},
      PARK_FEE_IN = #{record.parkFeeIn,jdbcType=DECIMAL},
      CHECK_MARK = #{record.checkMark,jdbcType=SMALLINT},
      ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holley.charging.model.bus.BusBillsDetail" >
    update bus_bills_detail
    <set >
      <if test="recordId != null" >
        RECORD_ID = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="checkCycle != null" >
        CHECK_CYCLE = #{checkCycle,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        TOTAL_FEE = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="appFeeIn != null" >
        APP_FEE_IN = #{appFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="chaFeeIn != null" >
        CHA_FEE_IN = #{chaFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeeIn != null" >
        SERVICE_FEE_IN = #{serviceFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="parkFeeIn != null" >
        PARK_FEE_IN = #{parkFeeIn,jdbcType=DECIMAL},
      </if>
      <if test="checkMark != null" >
        CHECK_MARK = #{checkMark,jdbcType=SMALLINT},
      </if>
      <if test="addTime != null" >
        ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holley.charging.model.bus.BusBillsDetail" >
    update bus_bills_detail
    set RECORD_ID = #{recordId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      CHECK_CYCLE = #{checkCycle,jdbcType=VARCHAR},
      TOTAL_FEE = #{totalFee,jdbcType=DECIMAL},
      APP_FEE_IN = #{appFeeIn,jdbcType=DECIMAL},
      CHA_FEE_IN = #{chaFeeIn,jdbcType=DECIMAL},
      SERVICE_FEE_IN = #{serviceFeeIn,jdbcType=DECIMAL},
      PARK_FEE_IN = #{parkFeeIn,jdbcType=DECIMAL},
      CHECK_MARK = #{checkMark,jdbcType=SMALLINT},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- 批量插入资金统计细表记录 -->
  <insert id="insertBillsDetailBatch" parameterType="java.util.List">
  	insert into bus_bills_detail (RECORD_ID, USER_ID, CHECK_CYCLE,TOTAL_FEE, APP_FEE_IN, CHA_FEE_IN, SERVICE_FEE_IN, PARK_FEE_IN,CHECK_MARK,ADD_TIME)
    values 
     <foreach collection="list" item="item" index="index" separator=",">
	    (#{item.recordId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.checkCycle,jdbcType=VARCHAR}, 
	      #{item.totalFee,jdbcType=DECIMAL}, #{item.appFeeIn,jdbcType=DECIMAL}, #{item.chaFeeIn,jdbcType=DECIMAL}, 
	      #{item.serviceFeeIn,jdbcType=DECIMAL}, #{item.parkFeeIn,jdbcType=DECIMAL},#{item.checkMark,jdbcType=SMALLINT},
	      #{item.addTime,jdbcType=TIMESTAMP})
     </foreach>
  </insert>
  <!-- 分页查询详细月账单 -->
  <select id="selectBillsDetailByPage" resultType="com.holley.charging.model.def.BillsDetailModel" parameterType="java.util.Map">
	select * from 
	(select station.STATION_NAME stationName,pile.PILE_NAME pileName,bill.APP_FEE_IN appFee,bill.CHA_FEE_IN chaFee,bill.SERVICE_FEE_IN serviceFee,bill.PARK_FEE_IN parkFee, payment.UPDATE_TIME createTime,bill.CHECK_MARK checkMark FROM `bus_bills_detail` bill left join bus_payment payment on bill.RECORD_ID = payment.ID
	left join pob_charging_pile pile on pile.ID = payment.PILE_ID 
	left join pob_charging_station station on station.ID = pile.STATION_ID
	where 
	bill.CHECK_MARK = 1 
	and bill.USER_ID = #{userId}
	<if test="checkCycle != null">
	and bill.CHECK_CYCLE = #{checkCycle}
	</if>
	UNION ALL
	select  station.STATION_NAME stationName,pile.PILE_NAME pileName,bill.APP_FEE_IN appFee,bill.CHA_FEE_IN chaFee,bill.SERVICE_FEE_IN serviceFee,bill.PARK_FEE_IN parkFee, appointment.ADD_TIME createTime,bill.CHECK_MARK checkMark  FROM `bus_bills_detail` bill left join bus_appointment appointment on bill.RECORD_ID = appointment.ID
	left join pob_charging_pile pile on pile.ID = appointment.PILE_ID
	left join pob_charging_station station on station.ID = pile.STATION_ID
	where 
	bill.CHECK_MARK = 2 
	and bill.USER_ID = #{userId}
	<if test="checkCycle != null">
	and bill.CHECK_CYCLE = #{checkCycle}
	</if>
	) model
	order by model.createTime desc
  </select>
   <!-- 导出月账单 -->
  <select id="exportBillsDetail" resultType="com.holley.charging.model.def.BillsDetailModel" parameterType="java.util.Map">
	select * from 
	(select station.STATION_NAME stationName,pile.PILE_NAME pileName,bill.APP_FEE_IN appFee,bill.CHA_FEE_IN chaFee,bill.SERVICE_FEE_IN serviceFee,bill.PARK_FEE_IN parkFee, payment.UPDATE_TIME createTime,bill.CHECK_MARK checkMark FROM `bus_bills_detail` bill left join bus_payment payment on bill.RECORD_ID = payment.ID
	left join pob_charging_pile pile on pile.ID = payment.PILE_ID 
	left join pob_charging_station station on station.ID = pile.STATION_ID
	where 
	bill.CHECK_MARK = 1 
	and bill.USER_ID = #{userId}
	<if test="checkCycle != null">
	and bill.CHECK_CYCLE = #{checkCycle}
	</if>
	UNION ALL
	select  station.STATION_NAME stationName,pile.PILE_NAME pileName,bill.APP_FEE_IN appFee,bill.CHA_FEE_IN chaFee,bill.SERVICE_FEE_IN serviceFee,bill.PARK_FEE_IN parkFee, appointment.ADD_TIME createTime,bill.CHECK_MARK checkMark  FROM `bus_bills_detail` bill left join bus_appointment appointment on bill.RECORD_ID = appointment.ID
	left join pob_charging_pile pile on pile.ID = appointment.PILE_ID
	left join pob_charging_station station on station.ID = pile.STATION_ID
	where 
	bill.CHECK_MARK = 2 
	and bill.USER_ID = #{userId}
	<if test="checkCycle != null">
	and bill.CHECK_CYCLE = #{checkCycle}
	</if>
	) model
	order by model.createTime desc
  </select>
  <select id="selectBillDetailByParamByPage" parameterType="java.util.Map" resultType="com.holley.charging.model.app.TradeRecord">
  	SELECT t.* from(
  		<!-- 充电 -->
	  	SELECT pay.PILE_ID AS pileid,bill.CHECK_MARK AS type,
		       bill.ADD_TIME AS datatime,IFNULL(bill.CHA_FEE_IN,0)+IFNULL(bill.SERVICE_FEE_IN,0)+IFNULL(bill.PARK_FEE_IN,0) AS fee,0 AS status
		  FROM bus_payment pay,bus_bills_detail bill
		 WHERE pay.ID = bill.RECORD_ID
			 AND bill.CHECK_MARK = 1
			 AND bill.USER_ID = #{userid}
		     AND bill.ADD_TIME &gt;= #{startdate}
		     AND bill.ADD_TIME &lt; #{enddate}
	
		UNION ALL
	
		<!-- 预约 -->
		SELECT app.PILE_ID AS pileid,bill.CHECK_MARK AS type,
			     bill.ADD_TIME AS datatime,IFNULL(bill.APP_FEE_IN,0) AS fee,0 AS status
		  FROM bus_appointment app,bus_bills_detail bill
		 WHERE app.ID = bill.RECORD_ID
			 AND bill.CHECK_MARK = 2
			 AND bill.USER_ID = #{userid}
		     AND bill.ADD_TIME &gt;= #{startdate}
		     AND bill.ADD_TIME &lt; #{enddate}
  	)t ORDER BY t.datatime DESC
  </select>
  
  <select id="selectBillsDetailInByPage" parameterType="java.util.Map" resultMap="BillsDetailResultMap">
  	SELECT t.* from(
	  	SELECT d.*,p.PILE_ID
		  FROM bus_bills_detail d,bus_payment p
		  WHERE d.RECORD_ID = p.ID
		    AND d.CHECK_MARK = 1
		    <if test="checkmark != null">
		    	AND d.CHECK_MARK = #{checkmark}
		    </if>
			AND d.USER_ID = #{userid}
			AND d.CHECK_CYCLE = #{checkcycle}
		
		UNION ALL 
		
		SELECT d.*,a.PILE_ID
		  FROM bus_bills_detail d,bus_appointment a
		 WHERE d.RECORD_ID = a.ID
		   AND d.CHECK_MARK = 2
		   <if test="checkmark != null">
		   		AND d.CHECK_MARK = #{checkmark}
		   </if>
		   AND d.USER_ID = #{userid}
		   AND d.CHECK_CYCLE = #{checkcycle}
	   )t ORDER BY t.ADD_TIME DESC
  </select>
  
  <select id="selectBillsDetailInTotal" parameterType="java.util.Map" resultMap="BaseResultMap">
  	SELECT SUM(d.APP_FEE_IN) appFeeIn,SUM(d.CHA_FEE_IN) chaFeeIn,SUM(d.SERVICE_FEE_IN) serviceFeeIn,SUM(d.PARK_FEE_IN) parkFeeIn,SUM(d.TOTAL_FEE) totalFee
	FROM bus_bills_detail d
	 WHERE d.USER_ID = #{userid}
	 AND d.CHECK_CYCLE = #{checkcycle}
	<if test="checkmark != null">
   		AND d.CHECK_MARK = #{checkmark}
   </if>
  </select>
  
  <select id="selectBillsDetailOutByPage" parameterType="java.util.Map" resultType="com.holley.charging.model.bms.BillsDetail">
  	<include refid="selectBillsDetailOut"/>
  </select>
  
  <select id="selectBillsDetailOutTotal" parameterType="java.util.Map"  resultType="com.holley.charging.model.bms.BillsDetail">
  	SELECT SUM(t.appFee) appFee,SUM(t.chaFee) chaFee,SUM(t.serviceFee) serviceFee,SUM(t.parkFee) parkFee
  	FROM
	(
		<include refid="selectBillsDetailOut"/>
	)t
  </select>
  <sql id="selectBillsDetailOut">
  	SELECT t.*,CONCAT(station.STATION_NAME,' ',pile.PILE_NAME) as stationPileName
  	FROM
	(
		SELECT p.ID as recordId,null as appFee,p.CHA_FEE as chaFee,p.SERVICE_FEE as serviceFee,p.PARK_FEE as parkFee,1 as checkMark,p.PILE_ID as pileId,p.UPDATE_TIME as addTime
		FROM bus_payment p 
		WHERE 1 = 1
		AND p.USER_ID = #{userid}
		AND p.UPDATE_TIME &gt;= #{startdate}
		AND p.UPDATE_TIME &lt; #{enddate}
		AND p.PAY_STATUS = 3
	
		UNION ALL 
	
	  SELECT a.ID as recordId,a.APP_FEE as appFee,null as chaFee,null as serviceFee,null as parkFee,2 as checkMark,a.PILE_ID as pileId,a.ADD_TIME as addTime
		FROM bus_appointment a 
		WHERE 1 = 1
		AND a.USER_ID = #{userid}
		AND a.ADD_TIME &gt;= #{startdate}
		AND a.ADD_TIME &lt; #{enddate}
		AND a.PAY_STATUS = 3
		
	)t ,pob_charging_pile pile,pob_charging_station station
	WHERE t.pileId = pile.ID
	AND pile.STATION_ID = station.ID
	<if test="checkmark != null">
   		AND t.checkMark = #{checkmark}
   </if>
	ORDER BY t.addTime desc
  </sql>
  
</mapper>