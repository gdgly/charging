<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.holley.charging.dao.dcs.DcsAlarmEventsMapper">
  <resultMap id="BaseResultMap" type="com.holley.charging.model.dcs.DcsAlarmEvents">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PILE_ID" jdbcType="INTEGER" property="pileId" />
    <result column="EVENT_ID" jdbcType="CHAR" property="eventId" />
    <result column="DESCRIBED" jdbcType="VARCHAR" property="described" />
    <result column="LEVEL" jdbcType="SMALLINT" property="level" />
    <result column="EVENT_TIME" jdbcType="TIMESTAMP" property="eventTime" />
  </resultMap>
  <resultMap id="DcsAlarmEventsModelMap" type="com.holley.charging.model.def.DcsAlarmEventsModel">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PILE_ID" jdbcType="INTEGER" property="pileId" />
    <result column="EVENT_ID" jdbcType="CHAR" property="eventId" />
    <result column="DESCRIBED" jdbcType="VARCHAR" property="described" />
    <result column="LEVEL" jdbcType="SMALLINT" property="level" />
    <result column="EVENT_TIME" jdbcType="TIMESTAMP" property="eventTime" />
    <result column="stationName" jdbcType="VARCHAR" property="stationName" />
    <result column="pileName" jdbcType="VARCHAR" property="pileName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PILE_ID, EVENT_ID, DESCRIBED, LEVEL, EVENT_TIME
  </sql>
  <select id="selectByExample" parameterType="com.holley.charging.model.dcs.DcsAlarmEventsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dcs_alarm_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dcs_alarm_events
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <!-- 分页查询告警事件列表 -->
  <select id="selectDcsAlarmEventsModelByPage"  resultMap="DcsAlarmEventsModelMap" parameterType="java.util.Map" >
 	select alarm.*,
 	station.STATION_NAME as stationName,
 	station.ADDRESS as address,
 	pile.PILE_NAME as pileName
 	from dcs_alarm_events alarm 
 	left join pob_charging_pile pile 
 	on pile.ID = alarm.PILE_ID 
	left join pob_charging_station station 
	on station.ID = pile.STATION_ID 
	where 1=1
	<if test="busType != null" >
   		and station.BUS_TYPE=#{busType,jdbcType=SMALLINT} 
   	</if>
   	<if test="busMec != null" >
     	and station.BUS_MEC=#{busMec,jdbcType=INTEGER} 
   	</if>
   	<if test="keyword != null">
		AND (station.STATION_NAME LIKE concat('%',#{keyword},'%' )
			 OR station.ADDRESS LIKE concat('%',#{keyword},'%' )
			)
	</if>
   	<if test="startTime != null">
   	    and alarm.EVENT_TIME &gt;=#{startTime}
   	</if>
   	<if test="endTime != null">
   	    and alarm.EVENT_TIME &lt;=#{endTime}
   	</if>
   		order by alarm.EVENT_TIME desc
   	<if test="maxLimit != null">
   		limit #{maxLimit}
   	</if>
  </select>
   <!-- 导出事件Excel -->
  <select id="exportAlarmEvents"  resultMap="DcsAlarmEventsModelMap" parameterType="java.util.Map" >
 	select alarm.*,
 	station.STATION_NAME as stationName,
 	station.ADDRESS as address,
 	pile.PILE_NAME as pileName
 	from dcs_alarm_events alarm 
 	left join pob_charging_pile pile 
 	on pile.ID = alarm.PILE_ID 
	left join pob_charging_station station 
	on station.ID = pile.STATION_ID 
	where 1=1
	<if test="busType != null" >
   		and station.BUS_TYPE=#{busType,jdbcType=SMALLINT} 
   	</if>
   	<if test="busMec != null" >
     	and station.BUS_MEC=#{busMec,jdbcType=INTEGER} 
   	</if>
   	<if test="startTime != null">
    	and alarm.EVENT_TIME &gt;= #{startTime}
   </if>
   <if test="endTime != null">
   		and alarm.EVENT_TIME &lt;= #{endTime}
   </if>
    	order by alarm.EVENT_TIME desc
   <if test="maxLimit != null">
    	limit #{maxLimit}
   </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dcs_alarm_events
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.holley.charging.model.dcs.DcsAlarmEventsExample">
    delete from dcs_alarm_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holley.charging.model.dcs.DcsAlarmEvents">
    insert into dcs_alarm_events (ID, PILE_ID, EVENT_ID, 
      DESCRIBED, LEVEL, EVENT_TIME
      )
    values (#{id,jdbcType=INTEGER}, #{pileId,jdbcType=INTEGER}, #{eventId,jdbcType=CHAR}, 
      #{described,jdbcType=VARCHAR}, #{level,jdbcType=SMALLINT}, #{eventTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.holley.charging.model.dcs.DcsAlarmEvents">
    insert into dcs_alarm_events
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="pileId != null">
        PILE_ID,
      </if>
      <if test="eventId != null">
        EVENT_ID,
      </if>
      <if test="described != null">
        DESCRIBED,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="eventTime != null">
        EVENT_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pileId != null">
        #{pileId,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=CHAR},
      </if>
      <if test="described != null">
        #{described,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=SMALLINT},
      </if>
      <if test="eventTime != null">
        #{eventTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holley.charging.model.dcs.DcsAlarmEventsExample" resultType="java.lang.Integer">
    select count(*) from dcs_alarm_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dcs_alarm_events
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pileId != null">
        PILE_ID = #{record.pileId,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null">
        EVENT_ID = #{record.eventId,jdbcType=CHAR},
      </if>
      <if test="record.described != null">
        DESCRIBED = #{record.described,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=SMALLINT},
      </if>
      <if test="record.eventTime != null">
        EVENT_TIME = #{record.eventTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dcs_alarm_events
    set ID = #{record.id,jdbcType=INTEGER},
      PILE_ID = #{record.pileId,jdbcType=INTEGER},
      EVENT_ID = #{record.eventId,jdbcType=CHAR},
      DESCRIBED = #{record.described,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=SMALLINT},
      EVENT_TIME = #{record.eventTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holley.charging.model.dcs.DcsAlarmEvents">
    update dcs_alarm_events
    <set>
      <if test="pileId != null">
        PILE_ID = #{pileId,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        EVENT_ID = #{eventId,jdbcType=CHAR},
      </if>
      <if test="described != null">
        DESCRIBED = #{described,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=SMALLINT},
      </if>
      <if test="eventTime != null">
        EVENT_TIME = #{eventTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holley.charging.model.dcs.DcsAlarmEvents">
    update dcs_alarm_events
    set PILE_ID = #{pileId,jdbcType=INTEGER},
      EVENT_ID = #{eventId,jdbcType=CHAR},
      DESCRIBED = #{described,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=SMALLINT},
      EVENT_TIME = #{eventTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>