<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holley.charging.dcs.dao.mapper.PileFeeModelMapper" >
  <resultMap id="BaseResultMap" type="com.holley.charging.dcs.dao.model.PileFeeModel" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="PILE_ID" property="pileId" jdbcType="INTEGER" />
    <result column="CHARGERULE_ID" property="chargeruleId" jdbcType="INTEGER" />
    <result column="CHARGE_FEE" property="chargeFee" jdbcType="DECIMAL" />
    <result column="PARK_FEE" property="parkFee" jdbcType="DECIMAL" />
    <result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
    <result column="ACTIVE_TIME" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="SMALLINT" />
    <result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PILE_ID, CHARGERULE_ID, CHARGE_FEE, PARK_FEE, SERVICE_FEE, ACTIVE_TIME, STATUS, 
    ADD_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.holley.charging.dcs.dao.model.PileFeeModelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bus_pile_chargerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bus_pile_chargerule
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bus_pile_chargerule
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.holley.charging.dcs.dao.model.PileFeeModelExample" >
    delete from bus_pile_chargerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holley.charging.dcs.dao.model.PileFeeModel" >
    insert into bus_pile_chargerule (ID, PILE_ID, CHARGERULE_ID, 
      CHARGE_FEE, PARK_FEE, SERVICE_FEE, 
      ACTIVE_TIME, STATUS, ADD_TIME
      )
    values (#{id,jdbcType=INTEGER}, #{pileId,jdbcType=INTEGER}, #{chargeruleId,jdbcType=INTEGER}, 
      #{chargeFee,jdbcType=DECIMAL}, #{parkFee,jdbcType=DECIMAL}, #{serviceFee,jdbcType=DECIMAL}, 
      #{activeTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.holley.charging.dcs.dao.model.PileFeeModel" >
    insert into bus_pile_chargerule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="pileId != null" >
        PILE_ID,
      </if>
      <if test="chargeruleId != null" >
        CHARGERULE_ID,
      </if>
      <if test="chargeFee != null" >
        CHARGE_FEE,
      </if>
      <if test="parkFee != null" >
        PARK_FEE,
      </if>
      <if test="serviceFee != null" >
        SERVICE_FEE,
      </if>
      <if test="activeTime != null" >
        ACTIVE_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="addTime != null" >
        ADD_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pileId != null" >
        #{pileId,jdbcType=INTEGER},
      </if>
      <if test="chargeruleId != null" >
        #{chargeruleId,jdbcType=INTEGER},
      </if>
      <if test="chargeFee != null" >
        #{chargeFee,jdbcType=DECIMAL},
      </if>
      <if test="parkFee != null" >
        #{parkFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFee != null" >
        #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holley.charging.dcs.dao.model.PileFeeModelExample" resultType="java.lang.Integer" >
    select count(*) from bus_pile_chargerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bus_pile_chargerule
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pileId != null" >
        PILE_ID = #{record.pileId,jdbcType=INTEGER},
      </if>
      <if test="record.chargeruleId != null" >
        CHARGERULE_ID = #{record.chargeruleId,jdbcType=INTEGER},
      </if>
      <if test="record.chargeFee != null" >
        CHARGE_FEE = #{record.chargeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.parkFee != null" >
        PARK_FEE = #{record.parkFee,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceFee != null" >
        SERVICE_FEE = #{record.serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.activeTime != null" >
        ACTIVE_TIME = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.addTime != null" >
        ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bus_pile_chargerule
    set ID = #{record.id,jdbcType=INTEGER},
      PILE_ID = #{record.pileId,jdbcType=INTEGER},
      CHARGERULE_ID = #{record.chargeruleId,jdbcType=INTEGER},
      CHARGE_FEE = #{record.chargeFee,jdbcType=DECIMAL},
      PARK_FEE = #{record.parkFee,jdbcType=DECIMAL},
      SERVICE_FEE = #{record.serviceFee,jdbcType=DECIMAL},
      ACTIVE_TIME = #{record.activeTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=SMALLINT},
      ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holley.charging.dcs.dao.model.PileFeeModel" >
    update bus_pile_chargerule
    <set >
      <if test="pileId != null" >
        PILE_ID = #{pileId,jdbcType=INTEGER},
      </if>
      <if test="chargeruleId != null" >
        CHARGERULE_ID = #{chargeruleId,jdbcType=INTEGER},
      </if>
      <if test="chargeFee != null" >
        CHARGE_FEE = #{chargeFee,jdbcType=DECIMAL},
      </if>
      <if test="parkFee != null" >
        PARK_FEE = #{parkFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFee != null" >
        SERVICE_FEE = #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="activeTime != null" >
        ACTIVE_TIME = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=SMALLINT},
      </if>
      <if test="addTime != null" >
        ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holley.charging.dcs.dao.model.PileFeeModel" >
    update bus_pile_chargerule
    set PILE_ID = #{pileId,jdbcType=INTEGER},
      CHARGERULE_ID = #{chargeruleId,jdbcType=INTEGER},
      CHARGE_FEE = #{chargeFee,jdbcType=DECIMAL},
      PARK_FEE = #{parkFee,jdbcType=DECIMAL},
      SERVICE_FEE = #{serviceFee,jdbcType=DECIMAL},
      ACTIVE_TIME = #{activeTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=SMALLINT},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>